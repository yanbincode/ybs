--SQL 查询优化

OLTP : 联机事务处理
OLAP ：联机分析处理

/*
 * 1、oracle的执行计划
 * 
 */
toad ： ctrl + E 90%正确

1、where 条件删选，根据索引找数据量最小的条件先筛选

2、由里到到外，由上到下。不靠谱

	看树节点。父子关系。 从子走，上到下

2、like 不走索引   like 'xxx%' 走索引 like '%xxx' 不走索引

3、uniue all 

4、filter 和 access 。 

	filter ：全读，再逐条过滤
	access ：通过索引定位


-- 2、速度： 有效的资源下的响应速度

--3、性能的问题，优化 有很多的阶段 

--4、工具
oracle sql trace 
profiler 性能分析工具


绑定变量

--索引
创建索引可以大大提高系统的性能。

1，通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。

2，可以大大加快数据的检索速度，这也是创建索引的最主要的原因。

3，可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。

4，在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。

5，通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。

增加索引也有许多不利的方面。
1，创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。

2，索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。

3，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。

应该在这些列上创建索引
1、在经常需要搜索的列上，可以加快搜索的速度；

2、在作为主键的列上，强制该列的唯一性和组织表中数据的排列结构； （逻辑主键建唯一性索引， 或者建primary key）

3、在经常用在连接的列上，这些列主要是一些外键，可以加快连接的速度；

4、在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，其指定的范围是连续的；

5、在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间；

6、在经常使用在WHERE子句中的列上面创建索引，加快条件的判断速度。

不应该创建索引的的这些列
1、对于那些在查询中很少使用或者参考的列不应该创建索引。

2、对于那些只有很少数据值的列也不应该增加索引。例如人事表的性别列

3、对于那些定义为text, image和bit数据类型的列不应该增加索引。

4、当修改性能远远大于检索性能时，不应该创建索引。
